from math import factorial, e
import numpy as np
from math import factorial


def c(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))


# 1/ Даны значения зарплат из выборки выпускников:
# 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.
# Посчитать (желательно без использования статистических методов наподобие std, var, mean) среднее арифметическое,
# среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.

salary = np.array([100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150])

mean_1 = sum(salary) / len(salary)
print(mean_1)  # 65.3
mean_2 = salary.mean()
print(mean_2)  # 65.3

std_1 = (np.sum((salary - mean_1) ** 2) / len(salary)) ** 0.5
print(std_1)  # 30.823854398825596
std_2 = salary.std()
print(std_2)  # 30.823854398825596

var_1 = np.sum((salary - mean_1) ** 2) / len(salary)
print(var_1)  # 950.11
var_2 = salary.var()
print(var_2)  # 950.11

var_1_dof = np.sum((salary - mean_1) ** 2) / (len(salary) - 1)
print(var_1_dof)  # 1000.1157894736842
var_2_dof = salary.var(ddof=1)
print(var_2_dof)  # 1000.1157894736842


# 2/ В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых.
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?
# 1: 8 = 5Б + 3Ч, 2: 12: 5Б + 7Ч

p_1 = (c(5, 2) / c(8, 2)) * (c(5, 1) * c(7, 3) / c(12, 4))
p_2 = (c(5, 1) * c(3, 1) / c(8, 2)) * (c(5, 2) * c(7, 2) / c(12, 4))
p_3 = (c(3, 2) / c(8, 2)) * (c(5, 3) * c(7, 1) / c(12, 4))
p = p_1 + p_2 + p_3
print(p)  # 0.3686868686868687


# 3/ На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень.
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6.
# Найти вероятность того, что выстрел произведен: a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.
#
# А - попадание; В1,В2,В3 - стрелял соответствующий спортсмен
# P(A) = P(B1)*P(A|B1) + P(B2)*P(A|B2) + P(B3)*P(A|B3)
p_a = 1/3 * 0.9 + 1/3 * 0.8 + 1/3 * 0.6
p_b1_a = (1/3 * 0.9) / p_a
print(p_b1_a)  # 0.391304347826087
p_b2_a = (1/3 * 0.8) / p_a
print(p_b2_a)  # 0.3478260869565218
p_b3_a = (1/3 * 0.6) / p_a
print(p_b3_a)  # 0.2608695652173913


# 4/ В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило
# столько же, сколько на A и B вместе. Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8.
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию.
# Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?
#
# А - студент сдал сессию; В1,В2,В3 - студент с факультета А, В и С соотвтественно (вероятности 0,25, 0,25 и 0,5)
p_a = 0.25 * 0.8 + 0.25 * 0.7 + 0.5 * 0.9
p_b1_a = (0.25 * 0.8) / p_a
print(p_b1_a)  # 0.24242424242424246
p_b2_a = (0.25 * 0.7) / p_a
print(p_b2_a)  # 0.21212121212121213
p_b3_a = (0.5 * 0.9) / p_a
print(p_b3_a)  # 0.5454545454545455


# 5/ Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1,
# для второй - 0.2, для третьей - 0.25. Какова вероятность того, что в первый месяц выйдут из строя: а). все детали
# б). только две детали в). хотя бы одна деталь г). от одной до двух деталей?
# 1: 0.1+0.9,   2: 0.2+0.8,   3: 0.25+0.75

# a:
print(0.1 * 0.2 * 0.25)  # 0.005000000000000001
# b (1и2 + 2и3 + 1и3):
print(0.1 * 0.2 * 0.75 + 0.9 * 0.2 * 0.25 + 0.1 * 0.8 * 0.25)  # 0.08000000000000002
# c:
print(1 - 0.9 * 0.8 * 0.75)  # 0.45999999999999996
# d:
print(
    0.1 * 0.2 * 0.75 + 0.9 * 0.2 * 0.25 + 0.1 * 0.8 * 0.25 +
    0.1 * 0.8 * 0.75 + 0.9 * 0.2 * 0.75 + 0.9 * 0.8 * 0.25
)  # 0.45500000000000007
