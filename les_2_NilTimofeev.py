import math
from math import factorial


def c(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))


def bernulli(n, k, p):
    return c(n, k) * (p ** k) * ((1 - p) ** (n - k))


def puasson(n, m, p):
    l = p * n
    return (l ** m) / factorial(m) * (math.e ** -l)


# Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8.
# Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.
print(bernulli(100, 85, 0.8)) # 0.048061793700746355




# Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004.
# В жилом комплексе после ремонта в один день включили 5000 новых лампочек.
# Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?

# Вероятность появления события низкая, поэтому использую формулу Пуассона:
print(puasson(5000, 0, 0.0004)) # 0.1353352832366127
print(puasson(5000, 2, 0.0004)) # 0.2706705664732254




# Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?

# Вероятность выпадения орла 0.5:
print(bernulli(144, 70, 0.5)) # 0.06281178035144776

# В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых.
# Из каждого ящика вытаскивают случайным образом по два мяча. Какова вероятность того, что все мячи белые?
# 1: 10 = 7Б + 3Ч, 2: 11 =  9Б + 2Ч
print((7/10 * 6/9) * (9/11 * 8/10)) # 0.30545454545454537
print((c(7, 2) / c(10, 2)) * (c(9, 2) / c(11, 2))) # 0.3054545454545455


# Какова вероятность того, что ровно два мяча белые?
p_1 = (c(7, 1) * c(3, 1) / c(10, 2)) * (c(9, 1) * c(2, 1) / c(11, 2))
p_2 = (c(7, 2) * c(3, 0) / c(10, 2)) * (c(9, 0) * c(2, 2) / c(11, 2))
p_3 = (c(7, 0) * c(3, 2) / c(10, 2)) * (c(9, 2) * c(2, 0) / c(11, 2))
print(p_1 + p_2 + p_3) # 0.20484848484848486




# Какова вероятность того, что хотя бы один мяч белый?
print(1 - ((3/10 * 2/9) * (2/11 * 1/10))) # 0.9987878787878788
print(1 - ((c(3, 2) / c(10, 2)) * (c(2, 2) / c(11, 2)))) # 0.9987878787878788
